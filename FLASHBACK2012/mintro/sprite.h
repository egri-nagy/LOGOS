#define SPRITE_FRAMES 13

#define spA 0
#define spD 1
#define spE 2
#define spG 3
#define spH 4
#define spL 5
#define spM 6
#define spN 7
#define spO 8
#define spS 9
#define spT 10
#define spW 11
#define spI 12
#define spR 13
#define spB 14
#define spU 15


#define SPRITE_FRAMES 16
static void draw_sprite(int x, int y, byte anim, byte rot, byte jk = 0) {
  switch (anim) {
  case 0:
    GD.xsprite(x, y, -8, -8, 0, 8, rot, jk);
    break;
  case 1:
    GD.xsprite(x, y, -8, -8, 0, 10, rot, jk);
    break;
  case 2:
    GD.xsprite(x, y, -8, -8, 0, 12, rot, jk);
    break;
  case 3:
    GD.xsprite(x, y, -8, -8, 0, 14, rot, jk);
    break;
  case 4:
    GD.xsprite(x, y, -8, -8, 1, 8, rot, jk);
    break;
  case 5:
    GD.xsprite(x, y, -8, -8, 1, 10, rot, jk);
    break;
  case 6:
    GD.xsprite(x, y, -8, -8, 1, 12, rot, jk);
    break;
  case 7:
    GD.xsprite(x, y, -8, -8, 1, 14, rot, jk);
    break;
  case 8:
    GD.xsprite(x, y, -8, -8, 2, 8, rot, jk);
    break;
  case 9:
    GD.xsprite(x, y, -8, -8, 2, 10, rot, jk);
    break;
  case 10:
    GD.xsprite(x, y, -8, -8, 2, 12, rot, jk);
    break;
  case 11:
    GD.xsprite(x, y, -8, -8, 2, 14, rot, jk);
    break;
  case 12:
    GD.xsprite(x, y, -8, -8, 3, 8, rot, jk);
    break;
  case 13:
    GD.xsprite(x, y, -8, -8, 3, 10, rot, jk);
    break;
  case 14:
    GD.xsprite(x, y, -8, -8, 3, 12, rot, jk);
    break;
  case 15:
    GD.xsprite(x, y, -8, -8, 3, 14, rot, jk);
    break;
  }
}

static PROGMEM prog_uchar sprite_sprimg[] = {

0xc9,  0x01,  0x8e,  0xfb,  0xf7,  0xee,  0xc5,  0x88,  0x11,  0xa2,  0x54,  0x03,  0x20,  0x44,  0x0b,  0x66, 
0xfc,  0xf8,  0x0f,  0x00,  0x5e,  0x8c,  0x5a,  0x85,  0x1a,  0x9c,  0x42,  0x02,  0x54,  0x83,  0x7e,  0x43, 
0xa0,  0x17,  0xa0,  0xc1,  0x35,  0xf8,  0x07,  0xd7,  0xf0,  0xe9,  0xd1,  0x43,  0xf4,  0xc0,  0x1a,  0x2e, 
0x29,  0xc2,  0xc1,  0x8f,  0xd9,  0x83,  0xd7,  0x00,  0x14,  0x3d,  0xb8,  0x26,  0x4d,  0x38,  0x76,  0x12, 
0x87,  0x9f,  0x10,  0xec,  0x39,  0xf8,  0xda,  0xb7,  0x0f,  0x07,  0x02,  0x54,  0xa3,  0xc1,  0x3f,  0x78, 
0x51,  0xa0,  0x4a,  0x94,  0x2b,  0xd6,  0xf0,  0x03,  0xd7,  0x6e,  0x00,  0x08,  0x7e,  0xc9,  0x2b,  0xf8, 
0x07,  0x5f,  0xba,  0x70,  0xf1,  0x66,  0x05,  0x2e,  0x5c,  0x03,  0x00,  0xd6,  0xf2,  0xe1,  0x15,  0x6a, 
0xf1,  0xa0,  0x4b,  0x31,  0x68,  0x70,  0x09,  0x1e,  0x18,  0x31,  0x7a,  0x0c,  0x9e,  0xd5,  0x93,  0x0e, 
0x05,  0xea,  0xd4,  0xa9,  0x50,  0xa1,  0x0a,  0x10,  0xaf,  0xdf,  0xe0,  0x1f,  0xfc,  0xc3,  0xa7,  0xd5, 
0xb4,  0x11,  0x3e,  0x21,  0x40,  0x34,  0xeb,  0x37,  0x7c,  0x7a,  0xf4,  0x68,  0xd0,  0xa0,  0x19,  0x3b, 
0x90,  0x21,  0x97,  0x0c,  0xbb,  0xc1,  0xdb,  0xaf,  0xd1,  0x14,  0x40,  0x90,  0x00,  0x7f,  0x3e,  0x64, 
0xc9,  0xc2,  0x85,  0x6b,  0xb6,  0x7b,  0x9a,  0xed,  0x8e,  0x14,  0x09,  0x90,  0x27,  0x43,  0x96,  0x6e, 
0x00,  0x80,  0x6b,  0xc6,  0xbf,  0x79,  0xbb,  0xc1,  0x8b,  0x42,  0xf0,  0x08,  0x8e,  0xc1,  0xc3,  0x8e, 
0xf9,  0xe0,  0xd1,  0xbd,  0x28,  0xd0,  0xa7,  0x13,  0xbc,  0xe8,  0xc2,  0x31,  0x6f,  0x3f,  0x78,  0x43, 
0xb0,  0x6f,  0x07,  0x6e,  0xf0,  0xee,  0x1c,  0xe1,  0x93,  0x28,  0x41,  0x0b,  0x76,  0xd2,  0x45,  0x0a, 
0x08,  0x7e,  0x5c,  0x39,  0x5a,  0x0c,  0x9e,  0x7c,  0xf9,  0x06,  0xff,  0xe0,  0x1f,  0xfe,  0xc3,  0x7f, 

0xf0,  0x89,  0x5f,  0xd1,  0x3f,  0x7e,  0x70,  0xb5,  0x62,  0xd9,  0x82,  0xc5,  0xf8,  0x1f,  0xbc,  0xac, 
0x5b,  0xb1,  0xca,  0x91,  0x63,  0xf0,  0xa1,  0x18,  0xfc,  0x83,  0xef,  0x38,  0x0c,  0xff,  0xf9,  0xb3, 
0x34,  0x70,  0x0c,  0xff,  0xf9,  0xd3,  0x0e,  0x1d,  0x3a,  0x7c,  0x38,  0x5b,  0x0e,  0x00,  0x16,  0x38, 
0x70,  0x08,  0x12,  0xf0,  0xed,  0xf3,  0xa7,  0x1f,  0x00,  0xaa,  0x46,  0xc2,  0x78,  0x05,  0x09,  0x83, 
0x32,  0x79,  0xfe,  0x01,  0xa0,  0x4d,  0xd0,  0xb1,  0x68,  0xf1,  0x7f,  0x59,  0xb5,  0x12,  0xbc,  0xbb, 
0xa0,  0x45,  0xab,  0xc1,  0xdb,  0x2a,  0xc5,  0xe0,  0xdf,  0xb3,  0x22,  0x05,  0x45,  0x32,  0xd1,  0x83, 
0x4f,  0x6b,  0xe0,  0xe8,  0xd5,  0xca,  0x7a,  0xa0,  0xce,  0x67,  0x1d,  0x04,  0x85,  0xe0,  0xe3,  0xc5, 
0xfa,  0x76,  0xa0,  0xcc,  0xdf,  0x4f,  0xf0,  0xe4,  0xc3,  0x3f,  0x3c,  0x04,  0x08,  0xcf,  0xc1,  0x93, 
0x3a,  0xe7,  0xe0,  0x15,  0x01,  0x82,  0xb7,  0xe5,  0xe0,  0xc9,  0xdd,  0x83,  0xc7,  0xe0,  0xe7,  0x3f, 
0x78,  0x7b,  0xf1,  0x1a,  0xbe,  0x92,  0x27,  0x5f,  0x3f,  0xf6,  0x29,  0x07,  0xdf,  0xf8,  0x11,  0xbc, 
0xf0,  0xc2,  0x09,  0x9e,  0x5c,  0xb0,  0x62,  0x0d,  0x5e,  0x39,  0xb0,  0x0b,  0x54,  0xa7,  0x41,  0xc0, 
0x91,  0x4f,  0x70,  0xc4,  0x7f,  0x27,  0xba,  0x43,  0x75,  0xe2,  0x1a,  0x8e,  0x82,  0x43,  0xf0,  0xe4, 
0x12,  0x3c,  0x5f,  0x06,  0xc7,  0xe0,  0xe3,  0x3f,  0x02,  0x70,  0xe7,  0x12,  0x1c,  0x20,  0x42,  0xc4, 
0x1b,  0x5c,  0x02,  0x00,  0x7e,  0xce,  0x9c,  0x01,  0x03,  0x30,  0x63,  0x26,  0x4a,  0x06,  0x67,  0xc0, 
0x84,  0x03,  0x00,  0x01,  0x03,  0x01,  0x90,  0x40,  0x7c,  0x0c,  0x9e,  0xd0,  0xab,  0x26,  0x95,  0xae, 
0xd1,  0x2d,  0xa8,  0x10,  0x0e,  0xfe,  0xc1,  0x87,  0x7a,  0x08,  0x08,  0xff,  0xc1,  0x9b,  0x38,  0xe7, 

0xf0,  0x67,  0xd0,  0x60,  0xf8,  0x6a,  0x19,  0xe1,  0x6f,  0x68,  0x98,  0x0d,  0x5f,  0xdc,  0x3d,  0x07, 
0x3f,  0xb3,  0x76,  0x83,  0x7f,  0xf8,  0x5e,  0x09,  0xc9,  0x23,  0x3c,  0x70,  0x0e,  0xff,  0xe9,  0x2b, 
0x39,  0x24,  0xff,  0xe0,  0x45,  0x81,  0xfe,  0x7e,  0x48,  0xfe,  0x5e,  0xbd,  0x1a,  0xa5,  0x42,  0x39, 
0x04,  0xe4,  0x3f,  0xbc,  0x1e,  0x8d,  0x42,  0xcd,  0x1f,  0xd7,  0xa3,  0xfa,  0xf1,  0xa5,  0x3b,  0x10, 
0x82,  0xaf,  0xf5,  0x14,  0x18,  0x3c,  0x27,  0x42,  0xfe,  0xc4,  0x1c,  0xfc,  0x1f,  0x41,  0xf8,  0x20, 
0x1e,  0x3c,  0xf2,  0xa7,  0xf5,  0x08,  0x00,  0x3d,  0x78,  0x11,  0x24,  0x82,  0x1d,  0xbb,  0x77,  0xcf, 
0xfe,  0x01, 
};
static PROGMEM prog_uchar sprite_sprpal[] = {
//0xc8,  0x2a,  0x02,  0x16,  0x00,  0x00,  0x00,  0x80, 

0xad,  0x75,  0x66,  0x6c,  0x00,  0x00,  0x00,  0x80, 
};
static PROGMEM prog_uchar sprite_sprgreenpal[] = {

0xc8,  0x2a,  0x02,  0x16,  0x00,  0x00,  0x00,  0x80, 
};

